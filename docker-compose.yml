version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crawler_network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: crawler_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crawler_network

  api:
    build: .
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./logs:/app/logs
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=crawler_db
      - DB_USER=postgres
      - DB_PASSWORD=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - crawler_network

  celery_worker:
    build: .
    command: celery -A src.tasks.celery_app worker --loglevel=info --concurrency=4
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./logs:/app/logs
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=crawler_db
      - DB_USER=postgres
      - DB_PASSWORD=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - crawler_network

  celery_beat:
    build: .
    command: celery -A src.tasks.celery_app beat --loglevel=info
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./logs:/app/logs
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=crawler_db
      - DB_USER=postgres
      - DB_PASSWORD=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - crawler_network

  flower:
    build: .
    command: celery -A src.tasks.celery_app flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - ./src:/app/src
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - celery_worker
    networks:
      - crawler_network

networks:
  crawler_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: